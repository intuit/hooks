val COROUTINES_VERSION: String by project
val ARROW_VERSION: String by project

val compilerPlugin by configurations.creating

dependencies {
    implementation(kotlin("stdlib"))
    implementation("org.jetbrains.kotlinx", "kotlinx-coroutines-core", COROUTINES_VERSION)

    api(project(":hooks"))
    compilerPlugin(project(":compiler-plugin"))

    testImplementation(platform("org.junit:junit-bom:5.7.0"))
    testImplementation("org.junit.jupiter", "junit-jupiter")
    testImplementation("io.mockk", "mockk", "1.10.2")
}

val generatedSourcesRoot: String = "${buildDir.absolutePath}/generated/source/kapt/main"
sourceSets {
    main {
        java {
            srcDir(generatedSourcesRoot)
        }
    }
}

kotlin {
    explicitApi()
}

tasks {
    val cleanGenerated by registering {
        group = "build"
        delete(generatedSourcesRoot)
    }

    compileKotlin {
        dependsOn(compilerPlugin)
        dependsOn(cleanGenerated)
        kotlinOptions {
            verbose = true
            freeCompilerArgs += listOf(
                "-Xplugin=${compilerPlugin.resolve().first()}",
                "-P",
                "plugin:arrow.meta.plugin.compiler.hooks:generatedSrcOutputDir=$generatedSourcesRoot"
            )
        }
    }
}
